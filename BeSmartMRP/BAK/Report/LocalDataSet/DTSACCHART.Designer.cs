//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace mBudget.Report.LocalDataSet {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DTSACCHART")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DTSACCHART : global::System.Data.DataSet {
        
        private XRPACCHARTDataTable tableXRPACCHART;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DTSACCHART() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DTSACCHART(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["XRPACCHART"] != null)) {
                    base.Tables.Add(new XRPACCHARTDataTable(ds.Tables["XRPACCHART"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public XRPACCHARTDataTable XRPACCHART {
            get {
                return this.tableXRPACCHART;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DTSACCHART cln = ((DTSACCHART)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["XRPACCHART"] != null)) {
                    base.Tables.Add(new XRPACCHARTDataTable(ds.Tables["XRPACCHART"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableXRPACCHART = ((XRPACCHARTDataTable)(base.Tables["XRPACCHART"]));
            if ((initTable == true)) {
                if ((this.tableXRPACCHART != null)) {
                    this.tableXRPACCHART.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DTSACCHART";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DTSACCHART.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableXRPACCHART = new XRPACCHARTDataTable();
            base.Tables.Add(this.tableXRPACCHART);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeXRPACCHART() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DTSACCHART ds = new DTSACCHART();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void XRPACCHARTRowChangeEventHandler(object sender, XRPACCHARTRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class XRPACCHARTDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columncCode;
            
            private global::System.Data.DataColumn columncName;
            
            private global::System.Data.DataColumn columncName2;
            
            private global::System.Data.DataColumn columncCateg;
            
            private global::System.Data.DataColumn columncGroup;
            
            private global::System.Data.DataColumn columnnLevel;
            
            private global::System.Data.DataColumn columncQcAcChart;
            
            private global::System.Data.DataColumn columncQnAcChart;
            
            private global::System.Data.DataColumn columncQcAcChart2;
            
            private global::System.Data.DataColumn columncQnAcChart2;
            
            private global::System.Data.DataColumn columncQcAcChart3;
            
            private global::System.Data.DataColumn columncQnAcChart3;
            
            private global::System.Data.DataColumn columncQcAcChart4;
            
            private global::System.Data.DataColumn columncQnAcChart4;
            
            private global::System.Data.DataColumn columncQcDept;
            
            private global::System.Data.DataColumn columncQnDept;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public XRPACCHARTDataTable() {
                this.TableName = "XRPACCHART";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal XRPACCHARTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected XRPACCHARTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cCodeColumn {
                get {
                    return this.columncCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cNameColumn {
                get {
                    return this.columncName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cName2Column {
                get {
                    return this.columncName2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cCategColumn {
                get {
                    return this.columncCateg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cGroupColumn {
                get {
                    return this.columncGroup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nLevelColumn {
                get {
                    return this.columnnLevel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cQcAcChartColumn {
                get {
                    return this.columncQcAcChart;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cQnAcChartColumn {
                get {
                    return this.columncQnAcChart;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cQcAcChart2Column {
                get {
                    return this.columncQcAcChart2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cQnAcChart2Column {
                get {
                    return this.columncQnAcChart2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cQcAcChart3Column {
                get {
                    return this.columncQcAcChart3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cQnAcChart3Column {
                get {
                    return this.columncQnAcChart3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cQcAcChart4Column {
                get {
                    return this.columncQcAcChart4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cQnAcChart4Column {
                get {
                    return this.columncQnAcChart4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cQcDeptColumn {
                get {
                    return this.columncQcDept;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cQnDeptColumn {
                get {
                    return this.columncQnDept;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public XRPACCHARTRow this[int index] {
                get {
                    return ((XRPACCHARTRow)(this.Rows[index]));
                }
            }
            
            public event XRPACCHARTRowChangeEventHandler XRPACCHARTRowChanging;
            
            public event XRPACCHARTRowChangeEventHandler XRPACCHARTRowChanged;
            
            public event XRPACCHARTRowChangeEventHandler XRPACCHARTRowDeleting;
            
            public event XRPACCHARTRowChangeEventHandler XRPACCHARTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddXRPACCHARTRow(XRPACCHARTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public XRPACCHARTRow AddXRPACCHARTRow(
                        string cCode, 
                        string cName, 
                        string cName2, 
                        string cCateg, 
                        string cGroup, 
                        decimal nLevel, 
                        string cQcAcChart, 
                        string cQnAcChart, 
                        string cQcAcChart2, 
                        string cQnAcChart2, 
                        string cQcAcChart3, 
                        string cQnAcChart3, 
                        string cQcAcChart4, 
                        string cQnAcChart4, 
                        string cQcDept, 
                        string cQnDept) {
                XRPACCHARTRow rowXRPACCHARTRow = ((XRPACCHARTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cCode,
                        cName,
                        cName2,
                        cCateg,
                        cGroup,
                        nLevel,
                        cQcAcChart,
                        cQnAcChart,
                        cQcAcChart2,
                        cQnAcChart2,
                        cQcAcChart3,
                        cQnAcChart3,
                        cQcAcChart4,
                        cQnAcChart4,
                        cQcDept,
                        cQnDept};
                rowXRPACCHARTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowXRPACCHARTRow);
                return rowXRPACCHARTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                XRPACCHARTDataTable cln = ((XRPACCHARTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new XRPACCHARTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columncCode = base.Columns["cCode"];
                this.columncName = base.Columns["cName"];
                this.columncName2 = base.Columns["cName2"];
                this.columncCateg = base.Columns["cCateg"];
                this.columncGroup = base.Columns["cGroup"];
                this.columnnLevel = base.Columns["nLevel"];
                this.columncQcAcChart = base.Columns["cQcAcChart"];
                this.columncQnAcChart = base.Columns["cQnAcChart"];
                this.columncQcAcChart2 = base.Columns["cQcAcChart2"];
                this.columncQnAcChart2 = base.Columns["cQnAcChart2"];
                this.columncQcAcChart3 = base.Columns["cQcAcChart3"];
                this.columncQnAcChart3 = base.Columns["cQnAcChart3"];
                this.columncQcAcChart4 = base.Columns["cQcAcChart4"];
                this.columncQnAcChart4 = base.Columns["cQnAcChart4"];
                this.columncQcDept = base.Columns["cQcDept"];
                this.columncQnDept = base.Columns["cQnDept"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columncCode = new global::System.Data.DataColumn("cCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncCode);
                this.columncName = new global::System.Data.DataColumn("cName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncName);
                this.columncName2 = new global::System.Data.DataColumn("cName2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncName2);
                this.columncCateg = new global::System.Data.DataColumn("cCateg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncCateg);
                this.columncGroup = new global::System.Data.DataColumn("cGroup", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncGroup);
                this.columnnLevel = new global::System.Data.DataColumn("nLevel", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnLevel);
                this.columncQcAcChart = new global::System.Data.DataColumn("cQcAcChart", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncQcAcChart);
                this.columncQnAcChart = new global::System.Data.DataColumn("cQnAcChart", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncQnAcChart);
                this.columncQcAcChart2 = new global::System.Data.DataColumn("cQcAcChart2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncQcAcChart2);
                this.columncQnAcChart2 = new global::System.Data.DataColumn("cQnAcChart2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncQnAcChart2);
                this.columncQcAcChart3 = new global::System.Data.DataColumn("cQcAcChart3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncQcAcChart3);
                this.columncQnAcChart3 = new global::System.Data.DataColumn("cQnAcChart3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncQnAcChart3);
                this.columncQcAcChart4 = new global::System.Data.DataColumn("cQcAcChart4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncQcAcChart4);
                this.columncQnAcChart4 = new global::System.Data.DataColumn("cQnAcChart4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncQnAcChart4);
                this.columncQcDept = new global::System.Data.DataColumn("cQcDept", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncQcDept);
                this.columncQnDept = new global::System.Data.DataColumn("cQnDept", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncQnDept);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public XRPACCHARTRow NewXRPACCHARTRow() {
                return ((XRPACCHARTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new XRPACCHARTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(XRPACCHARTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.XRPACCHARTRowChanged != null)) {
                    this.XRPACCHARTRowChanged(this, new XRPACCHARTRowChangeEvent(((XRPACCHARTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.XRPACCHARTRowChanging != null)) {
                    this.XRPACCHARTRowChanging(this, new XRPACCHARTRowChangeEvent(((XRPACCHARTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.XRPACCHARTRowDeleted != null)) {
                    this.XRPACCHARTRowDeleted(this, new XRPACCHARTRowChangeEvent(((XRPACCHARTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.XRPACCHARTRowDeleting != null)) {
                    this.XRPACCHARTRowDeleting(this, new XRPACCHARTRowChangeEvent(((XRPACCHARTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveXRPACCHARTRow(XRPACCHARTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DTSACCHART ds = new DTSACCHART();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "XRPACCHARTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class XRPACCHARTRow : global::System.Data.DataRow {
            
            private XRPACCHARTDataTable tableXRPACCHART;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal XRPACCHARTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableXRPACCHART = ((XRPACCHARTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cCode {
                get {
                    try {
                        return ((string)(this[this.tableXRPACCHART.cCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cCode\' in table \'XRPACCHART\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableXRPACCHART.cCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cName {
                get {
                    try {
                        return ((string)(this[this.tableXRPACCHART.cNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cName\' in table \'XRPACCHART\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableXRPACCHART.cNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cName2 {
                get {
                    try {
                        return ((string)(this[this.tableXRPACCHART.cName2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cName2\' in table \'XRPACCHART\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableXRPACCHART.cName2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cCateg {
                get {
                    try {
                        return ((string)(this[this.tableXRPACCHART.cCategColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cCateg\' in table \'XRPACCHART\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableXRPACCHART.cCategColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cGroup {
                get {
                    try {
                        return ((string)(this[this.tableXRPACCHART.cGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cGroup\' in table \'XRPACCHART\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableXRPACCHART.cGroupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal nLevel {
                get {
                    try {
                        return ((decimal)(this[this.tableXRPACCHART.nLevelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nLevel\' in table \'XRPACCHART\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableXRPACCHART.nLevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cQcAcChart {
                get {
                    try {
                        return ((string)(this[this.tableXRPACCHART.cQcAcChartColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cQcAcChart\' in table \'XRPACCHART\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableXRPACCHART.cQcAcChartColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cQnAcChart {
                get {
                    try {
                        return ((string)(this[this.tableXRPACCHART.cQnAcChartColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cQnAcChart\' in table \'XRPACCHART\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableXRPACCHART.cQnAcChartColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cQcAcChart2 {
                get {
                    try {
                        return ((string)(this[this.tableXRPACCHART.cQcAcChart2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cQcAcChart2\' in table \'XRPACCHART\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableXRPACCHART.cQcAcChart2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cQnAcChart2 {
                get {
                    try {
                        return ((string)(this[this.tableXRPACCHART.cQnAcChart2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cQnAcChart2\' in table \'XRPACCHART\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableXRPACCHART.cQnAcChart2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cQcAcChart3 {
                get {
                    try {
                        return ((string)(this[this.tableXRPACCHART.cQcAcChart3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cQcAcChart3\' in table \'XRPACCHART\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableXRPACCHART.cQcAcChart3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cQnAcChart3 {
                get {
                    try {
                        return ((string)(this[this.tableXRPACCHART.cQnAcChart3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cQnAcChart3\' in table \'XRPACCHART\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableXRPACCHART.cQnAcChart3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cQcAcChart4 {
                get {
                    try {
                        return ((string)(this[this.tableXRPACCHART.cQcAcChart4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cQcAcChart4\' in table \'XRPACCHART\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableXRPACCHART.cQcAcChart4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cQnAcChart4 {
                get {
                    try {
                        return ((string)(this[this.tableXRPACCHART.cQnAcChart4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cQnAcChart4\' in table \'XRPACCHART\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableXRPACCHART.cQnAcChart4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cQcDept {
                get {
                    try {
                        return ((string)(this[this.tableXRPACCHART.cQcDeptColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cQcDept\' in table \'XRPACCHART\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableXRPACCHART.cQcDeptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cQnDept {
                get {
                    try {
                        return ((string)(this[this.tableXRPACCHART.cQnDeptColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cQnDept\' in table \'XRPACCHART\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableXRPACCHART.cQnDeptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscCodeNull() {
                return this.IsNull(this.tableXRPACCHART.cCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcCodeNull() {
                this[this.tableXRPACCHART.cCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscNameNull() {
                return this.IsNull(this.tableXRPACCHART.cNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcNameNull() {
                this[this.tableXRPACCHART.cNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscName2Null() {
                return this.IsNull(this.tableXRPACCHART.cName2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcName2Null() {
                this[this.tableXRPACCHART.cName2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscCategNull() {
                return this.IsNull(this.tableXRPACCHART.cCategColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcCategNull() {
                this[this.tableXRPACCHART.cCategColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscGroupNull() {
                return this.IsNull(this.tableXRPACCHART.cGroupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcGroupNull() {
                this[this.tableXRPACCHART.cGroupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnLevelNull() {
                return this.IsNull(this.tableXRPACCHART.nLevelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnLevelNull() {
                this[this.tableXRPACCHART.nLevelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscQcAcChartNull() {
                return this.IsNull(this.tableXRPACCHART.cQcAcChartColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcQcAcChartNull() {
                this[this.tableXRPACCHART.cQcAcChartColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscQnAcChartNull() {
                return this.IsNull(this.tableXRPACCHART.cQnAcChartColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcQnAcChartNull() {
                this[this.tableXRPACCHART.cQnAcChartColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscQcAcChart2Null() {
                return this.IsNull(this.tableXRPACCHART.cQcAcChart2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcQcAcChart2Null() {
                this[this.tableXRPACCHART.cQcAcChart2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscQnAcChart2Null() {
                return this.IsNull(this.tableXRPACCHART.cQnAcChart2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcQnAcChart2Null() {
                this[this.tableXRPACCHART.cQnAcChart2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscQcAcChart3Null() {
                return this.IsNull(this.tableXRPACCHART.cQcAcChart3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcQcAcChart3Null() {
                this[this.tableXRPACCHART.cQcAcChart3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscQnAcChart3Null() {
                return this.IsNull(this.tableXRPACCHART.cQnAcChart3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcQnAcChart3Null() {
                this[this.tableXRPACCHART.cQnAcChart3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscQcAcChart4Null() {
                return this.IsNull(this.tableXRPACCHART.cQcAcChart4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcQcAcChart4Null() {
                this[this.tableXRPACCHART.cQcAcChart4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscQnAcChart4Null() {
                return this.IsNull(this.tableXRPACCHART.cQnAcChart4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcQnAcChart4Null() {
                this[this.tableXRPACCHART.cQnAcChart4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscQcDeptNull() {
                return this.IsNull(this.tableXRPACCHART.cQcDeptColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcQcDeptNull() {
                this[this.tableXRPACCHART.cQcDeptColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscQnDeptNull() {
                return this.IsNull(this.tableXRPACCHART.cQnDeptColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcQnDeptNull() {
                this[this.tableXRPACCHART.cQnDeptColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class XRPACCHARTRowChangeEvent : global::System.EventArgs {
            
            private XRPACCHARTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public XRPACCHARTRowChangeEvent(XRPACCHARTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public XRPACCHARTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591